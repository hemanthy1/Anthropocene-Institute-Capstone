[{"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/About/About.js":"1","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Navbar/Navbar.js":"2","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Accordion/Accordion.js":"3","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Faq/Faq.js":"4","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Footer/Footer.js":"5","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/DirectAirCapture/DirectAirCapture.js":"6","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Data/Data.js":"7","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Heatmap/Heatmap.js":"8","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Reforestation/Reforestation.js":"9","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/HomeBodyIntro/HomeBodyIntro.js":"10","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/OptimizationToolBlurb/OptimizationToolBlurb.js":"11","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/NoPage/NoPage.js":"12","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Articles/Articles.js":"13","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Dropdown/Dropdown.js":"14","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/index.js":"15","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/reportWebVitals.js":"16","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/App.js":"17","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Home/Home.js":"18","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Layout/Layout.js":"19","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Tools/Tools.js":"20","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/ArticleLink/ArticleLink.js":"21","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/MoreInfo/MoreInfo.js":"22","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/DACMap/DACMap.js":"23","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/KelpMap/KelpMap.js":"24","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/KelpFarms/KelpFarms.js":"25"},{"size":5990,"mtime":1697212307188,"results":"26","hashOfConfig":"27"},{"size":3815,"mtime":1698853148275,"results":"28","hashOfConfig":"27"},{"size":1500,"mtime":1698939730482,"results":"29","hashOfConfig":"27"},{"size":2366,"mtime":1696900708833,"results":"30","hashOfConfig":"27"},{"size":2260,"mtime":1699452487545,"results":"31","hashOfConfig":"27"},{"size":1124,"mtime":1699391378060,"results":"32","hashOfConfig":"27"},{"size":3309,"mtime":1697042100202,"results":"33","hashOfConfig":"27"},{"size":34272,"mtime":1699446546889,"results":"34","hashOfConfig":"27"},{"size":1375,"mtime":1698940352765,"results":"35","hashOfConfig":"27"},{"size":950,"mtime":1697042100201,"results":"36","hashOfConfig":"27"},{"size":5495,"mtime":1699452589635,"results":"37","hashOfConfig":"27"},{"size":501,"mtime":1696900708833,"results":"38","hashOfConfig":"27"},{"size":2363,"mtime":1696900708830,"results":"39","hashOfConfig":"27"},{"size":712,"mtime":1698335640843,"results":"40","hashOfConfig":"27"},{"size":574,"mtime":1696167939752,"results":"41","hashOfConfig":"27"},{"size":362,"mtime":1695303574535,"results":"42","hashOfConfig":"27"},{"size":1543,"mtime":1699452371234,"results":"43","hashOfConfig":"27"},{"size":301,"mtime":1696167939757,"results":"44","hashOfConfig":"27"},{"size":305,"mtime":1696171122281,"results":"45","hashOfConfig":"27"},{"size":105,"mtime":1696167939760,"results":"46","hashOfConfig":"27"},{"size":597,"mtime":1696344699734,"results":"47","hashOfConfig":"27"},{"size":12568,"mtime":1699370443287,"results":"48","hashOfConfig":"27"},{"size":19755,"mtime":1699452170616,"results":"49","hashOfConfig":"27"},{"size":8127,"mtime":1699452170608,"results":"50","hashOfConfig":"27"},{"size":735,"mtime":1699452433846,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"56"},"14zfh1r",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/About/About.js",["133"],[],"import React from 'react'\nimport \"./About.css\"\nimport ediepfp from \"../../assets/ediepfp.jpeg\"\nimport hemanthpfp from \"../../assets/hemanthpfp.jpeg\"\nimport nickpfp from \"../../assets/nickpfp.jpeg\"\nimport ishitapfp from \"../../assets/ishitapfp.jpeg\"\nimport jackpfp from \"../../assets/jackpfp.jpeg\"\nimport carlpfp from \"../../assets/carlpagepfp.jpeg\"\nimport frankpfp from \"../../assets/frankpfp.png\"\nimport melindapfp from \"../../assets/melindapfp.jpeg\"\nimport designdaypage from \"../../assets/designdaypage.png\"\n\nfunction About() {\n  return (\n    <div>\n      <div className=\"top-text\">\n        <h1 className=\"about-title\">About Us</h1>\n        <div className=\"about-us-text\">\n          <p className=\"about-us-text\">We are a group of Michigan State Students and made this website for our capstone project with the guidance of our amazing sponsors at the Anthropocene Institute.  </p>\n        </div>\n      </div>\n\n      <hr className=\"about-hr\"></hr>\n\n      <h2 className=\"our-team\">Our Sponsors</h2>\n      \n      <div className=\"row-one\">\n        <GeneralSponsorColumn className=\"Carl\"\n          pfp={carlpfp} \n          alt=\"Carl Page Pfp\" \n          name=\"Carl Page\" \n          role=\"President\">\n        </GeneralSponsorColumn>\n\n        <GeneralSponsorColumn className=\"Frank\"\n          pfp={frankpfp} \n          alt=\"Frank Ling Pfp\" \n          name=\"Frank Hiroshi Ling\" \n          role=\"Chief Scientist\">\n        </GeneralSponsorColumn>\n\n        <GeneralSponsorColumn className=\"Melinda\"\n          pfp={melindapfp} \n          alt=\"Melinda Alankar Pfp\" \n          name=\"Melinda Chow Alankar\" \n          role=\"Director of Investment and Funding Opportunities\">\n        </GeneralSponsorColumn>\n      </div>\n\n      <hr className='about-hr'></hr>\n\n      <h2 className=\"our-team\">Our Team</h2>\n\n      <div className=\"row-one\">\n        <GeneralColumn className=\"Edie\"\n          pfp={ediepfp} \n          alt=\"Edie Haase Pfp\" \n          name=\"Edie Haase\" \n          role=\"Front End Developer\" \n          text=\"Edie is pursing a major in computer science and a minor in environmental sustainability at Michigan State University.\" \n          email=\"haaseede@msu.edu\" \n          link=\"https://www.linkedin.com/in/eden-haase-90b688212/\" \n          buttontext=\"LinkedIn\">\n        </GeneralColumn>\n\n        <GeneralColumn className=\"Jack\"\n          pfp={jackpfp} \n          alt=\"Jack Holscher Pfp\" \n          name=\"Jack Holscher\" \n          role=\"Front End Developer\" \n          text=\"Jack Holscher, a fourth-year MSU computer science major, complemented by a minor in data science and a cognate in psychology.\" \n          email=\"holsche2@msu.edu\" \n          link=\"https://www.linkedin.com/in/jackson-holscher/\" \n          buttontext=\"LinkedIn\">\n        </GeneralColumn>\n\n        <GeneralColumn className=\"Nick\"\n          pfp={nickpfp} \n          alt=\"Nick Wang Pfp\" \n          name=\"Nick Wang\" \n          role=\"Front End Developer\" \n          text=\"Nick Wang is a senior Computer Science student at MSU with a minor in Cognitive Science pursuing a career in Software Engineering.\" \n          email=\"wangnich@msu.edu\" \n          link=\"https://www.linkedin.com/in/nicholas-wang7190/\" \n          buttontext=\"LinkedIn\">\n        </GeneralColumn>\n      </div>\n\n      <div className=\"row-two\">\n        <GeneralColumn className=\"Ishita\"\n          pfp={ishitapfp} \n          alt=\"Ishita Kokil Pfp\" \n          name=\"Ishita Kokil\" \n          role=\"Back End Developer\" \n          text=\"Ishita is pursuing a dual degree in Computer Science and Data Science at Michigan State University.\" \n          email=\"kokilish@msu.edu\" \n          link=\"https://www.linkedin.com/in/ishitakokil/\" \n          buttontext=\"LinkedIn\">\n        </GeneralColumn>\n\n        <GeneralColumn className=\"Hemanth\"\n          pfp={hemanthpfp} \n          alt=\"Hemanth Yalamanchili Pfp\" \n          name=\"Hemanth Yalamanchili\" \n          role=\"Back End Developer\" \n          text=\"Hemanth Yalamanchili, a passionate computer science student with a minor in game design and development at Michigan State University.\" \n          email=\"yalama12@msu.edu\" \n          link=\"https://hemanthyalamanchili.com/\" \n          buttontext=\"Website\">\n        </GeneralColumn>\n      </div>\n\n      <hr className=\"about-hr\"></hr>\n\n      <div className=\"bottom-text\">\n        <h1 className=\"about-title\">Our Design Day Booklet Page</h1>\n      </div>\n      \n      <DesignDayPage></DesignDayPage>\n    </div>\n  )\n}\n\nexport default About\n\n\n/**\n * General profile pic\n * \n * @returns The image as an HTML element\n */\nfunction GeneralPfp(props) {\n  return (\n    <a href=\"/\">\n      <img \n        src={props.src}\n        alt={props.alt}\n        loading=\"lazy\"\n        id=\"pfp\"\n      />\n    </a>\n  )\n}\n\n/**\n * General personal card element\n * \n * @returns The image as an HTML element\n */\nfunction GeneralColumn(props) {\n  return (\n    <div className=\"column\">\n    <div className=\"card\">\n    <GeneralPfp src={props.pfp} alt={props.alt}></GeneralPfp>\n      <div className=\"containerr\">\n        <h2 className=\"name\">{props.name}</h2>\n        <p className=\"role\">{props.role}</p>\n        <p>{props.text}</p>\n        <p>{props.email}</p>\n        <p><a href={props.link} target=\"_blank\" className=\"button\">{props.buttontext}</a></p>\n      </div>\n    </div>\n  </div>\n  )\n}\n\n\n/**\n * General sponsor card element\n * \n * @returns The image as an HTML element\n */\nfunction GeneralSponsorColumn(props) {\n  return (\n    <div className=\"column\">\n      <div className=\"card\">\n        <GeneralPfp src={props.pfp} alt={props.alt}></GeneralPfp>\n        <div className=\"containerr\">\n          <h2 className=\"name\">{props.name}</h2>\n          <p className=\"role\">{props.role}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n/**\n * Design day document image\n * \n * @returns The image as an HTML element\n */\nfunction DesignDayPage() {\n  return (\n    <a href=\"/\">\n      <img \n        src={designdaypage}\n        alt=\"Design Day Page\"\n        loading=\"lazy\"\n        id=\"ddp\"\n      />\n    </a>\n  )\n}",[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Navbar/Navbar.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Accordion/Accordion.js",["134","135","136"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Faq/Faq.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Footer/Footer.js",["137"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/DirectAirCapture/DirectAirCapture.js",["138"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Data/Data.js",["139","140","141"],[],"import React from 'react'\nimport \"./Data.css\"\n\nfunction Data() {\n\n  const links = {\n    link1: \"https://www.ncei.noaa.gov/access/monitoring/climate-at-a-glance/county/mapping\",\n    link2: \"https://www.acrevalue.com/map/\",\n    link3: \"https://www.census.gov/data/tables/time-series/demo/popest/2020s-counties-total.html\"\n  };\n\n  const titles = {\n    title1: \"NCEI - NOAA: Climate Data at the County Level - Average Temperature, Precipitation, Palmer-Z Index\",\n    title2: \"Land Prices by County - AcreValue.com\",\n    title3: \"Population by County - Census.gov\"\n  }\n\n  const descs = {\n    desc1: \"NOAA National Centers for Environmental information, \\\n            Climate at a Glance: County Mapping, published September 2023, \\\n            retrieved on October 4, 2023 from \\\n            https://www.ncei.noaa.gov/access/monitoring/climate-at-a-glance/county/mapping\",\n    desc2: \"Discover Land Values. acrevalue.com. (n.d.). https://www.acrevalue.com/map/ \",\n    desc3: \"Bureau, U. C. (2023, June 13). County population totals and components of \\\n            change: 2020-2022. Census.gov. \\\n            https://www.census.gov/data/tables/time-series/demo/popest/2020s-counties-total.html\"\n  }\n\n  return (\n    <div id=\"data-page\">\n      <div id=\"data-intro\">\n        <h2> Data Sources </h2>\n        <h3> \n          In the effort to provide complete transparency and to ensure reliable outcomes,\n          we've provided a comprehensive list of the different data sources that power\n          the Carbon Mapp's machine learning models. These datasets have been carefully\n          chosen and utilized to offer the most accurate and dependable insights. By accessing\n          the links below, you can dive deeper into the origins of the data, understanding the\n          basis of our models' predictions and results. \n        </h3>\n        <hr id=\"intro-sep\"/>\n      </div>\n\n      <div id=\"data-links-wrap\">\n      <DataLink \n        className=\"data-link\"\n        link={links.link1} \n        title={titles.title1} \n        desc={descs.desc1} \n        bg=\"var(--primary)\" \n        tc=\"white\"\n      />\n\n      <DataLink \n        className=\"data-link\"\n        link={links.link2} \n        title={titles.title2} \n        desc={descs.desc2} \n        bg=\"white\" \n        tc=\"var(--secondary)\"\n      />\n\n      <DataLink\n        className=\"data-link\"\n        link={links.link3}\n        title={titles.title3}\n        desc={descs.desc3}\n        bg=\"var(--primary)\"\n        tc=\"white\"\n      />\n      \n      {/* \n      \n      Examples for how to add extra links:\n      \n      <DataLink link={links.link3} title=\"test3\" desc=\"test desc3\" bg=\"var(--primary)\" tc=\"white\"/>\n      <DataLink link={links.link4} title=\"test4\" desc=\"test desc4\" bg=\"white\" tc=\"var(--secondary)\"/> \n      \n      */}\n\n      </div>\n    </div>\n  );\n}\n\nfunction DataLink(props) {\n\n  const styles = {\n    backgroundColor: props.bg,\n    color: props.tc,\n    boxShadow: \"4px 4px 4px 4px rgba(0, 0, 0, 0.175)\",\n    margin: \"1rem 0\",\n    height: \"20vh\",\n    padding: \"1rem\"\n  };\n\n  return (\n    <a href={props.link} target=\"_blank\">\n      <div className=\"data-link-content\" style={styles}>\n\n        <h4 className=\"data-link-header\"> {props.title} </h4>\n        <p className=\"data-link-desc\"> {props.desc} </p>\n      </div>\n    </a>\n  );\n}\n\nexport default Data;","/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Heatmap/Heatmap.js",["142","143","144","145","146"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Reforestation/Reforestation.js",[],[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/HomeBodyIntro/HomeBodyIntro.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/OptimizationToolBlurb/OptimizationToolBlurb.js",["147","148","149"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/NoPage/NoPage.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Articles/Articles.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/Dropdown/Dropdown.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/index.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/reportWebVitals.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/App.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Home/Home.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Layout/Layout.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/Tools/Tools.js",[],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/ArticleLink/ArticleLink.js",["150","151","152"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/MoreInfo/MoreInfo.js",["153"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/DACMap/DACMap.js",["154","155","156"],[],"import \"../../components/Heatmap/Heatmap.css\"\nimport React, {useState, useEffect, useRef} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport {Link} from \"react-router-dom\";\n\n\nfunction DACMap(props) {\n\n    const mapContainer = useRef(null);\n    const [legendDisplay] = useState('block');\n    const [dropdownDisplay] = useState('block');\n    const zoomThreshold = 3;\n\n\n    useEffect(() => {\n        mapboxgl.accessToken = 'pk.eyJ1IjoiamhvbHNjaDI5IiwiYSI6ImNsbjJjaWllNzAwcDQyam1wYnF6NHQ0Z24ifQ.TYll92t4SavsRHHFUhU-UA';\n\n        const map = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/light-v11',\n            center: [-98, 38.88],\n            minZoom: 2,\n            zoom: 2.2,\n        });\n        // Add Geocoder which creates the search bar\n        const geocoder = new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken,\n            mapboxgl: mapboxgl,\n        });\n\n        // Add the search bar to the heatmap\n        map.addControl(geocoder);\n\n        // map.on('load', () => {\n        //     map.addSource('population', {\n        //         type: 'vector',\n        //         url: 'mapbox://mapbox.660ui7x6',\n        //     });\n\n        //     map.addLayer({\n        //         id: 'state-population',\n        //         source: 'population',\n        //         'source-layer': 'state_county_population_2014_cen',\n        //         maxzoom: zoomThreshold,\n        //         type: 'fill',\n        //         filter: ['==', 'isState', true],\n        //         paint: {\n        //             'fill-color': [\n        //                 'interpolate',\n        //                 ['linear'],\n        //                 ['get', 'population'],\n        //                 1000,\n        //                 props.colors.color1,\n        //                 5000,\n        //                 props.colors.color2,\n        //                 10000,\n        //                 props.colors.color3,\n        //                 50000,\n        //                 props.colors.color4,\n        //                 100000,\n        //                 props.colors.color5,\n        //                 500000,\n        //                 props.colors.color6,\n        //                 1000000,\n        //                 props.colors.color7,\n        //             ],\n        //             'fill-opacity': .85,\n        //         },\n        //     });\n\n        //     map.addLayer({\n        //         id: 'county-population',\n        //         source: 'population',\n        //         'source-layer': 'state_county_population_2014_cen',\n        //         minzoom: zoomThreshold,\n        //         type: 'fill',\n        //         filter: ['==', 'isCounty', true],\n        //         paint: {\n        //             'fill-color': [\n        //                 'interpolate',\n        //                 ['linear'],\n        //                 ['get', 'population'],\n        //                 1000,\n        //                 props.colors.color1,\n        //                 5000,\n        //                 props.colors.color2,\n        //                 10000,\n        //                 props.colors.color3,\n        //                 50000,\n        //                 props.colors.color4,\n        //                 100000,\n        //                 props.colors.color5,\n        //                 500000,\n        //                 props.colors.color6,\n        //                 1000000,\n        //                 props.colors.color7,\n        //             ],\n        //             'fill-opacity': .85,\n        //         },\n        //     });\n        // });\n\n        map.on('load', () => {\n            // state data vector tileset\n            map.addSource('state', {\n                type: 'vector',\n                url: \"mapbox://jholsch29.4gfqi3ew\",\n                \"promoteId\": {\"stateDAC-1m13bh\": \"NAME\"},\n                //\n                // type: 'geojson',\n                // data: \"https://cdn.rawgit.com/ebrelsford/geojson-examples/master/596acres-02-18-2014-queens.geojson\"\n                //\n            });\n\n            // county data vector tileset\n            map.addSource('county', {\n                type: 'vector',\n                url: \"mapbox://jholsch29.5kpx78c7\",\n                \"promoteId\": {\"countyDAC-68q8mt\": \"GEO_ID\"},\n            });\n\n            // add choropleth layer for state level\n            map.addLayer({\n                id: 'state-data',\n                source: 'state',\n                'source-layer': 'stateDAC-1m13bh',  // vector tileset name\n                maxzoom: zoomThreshold,\n                type: 'fill',\n                filter: ['==', 'isState', \"yes\"],\n                paint: {\n                    'fill-color': [\n                        'case',\n                        ['boolean', ['feature-state', 'hover'], false],\n                        '#ffe37a', // Color to use when the condition is true (clicked)\n                        ['boolean', ['feature-state', 'click'], false],\n                        '#ffe37a', // Color to use when the condition is true (clicked)\n                        [\n                            'interpolate',\n                            ['linear'],\n                            ['get', 'class'],\n                            0,\n                            props.colors.color0,\n                            1,\n                            props.colors.color1,\n                            2,\n                            props.colors.color2,\n                            3,\n                            props.colors.color3,\n                            4,\n                            props.colors.color4,\n                            5,\n                            props.colors.color5,\n                            6,\n                            props.colors.color6,\n                            7,\n                            props.colors.color7\n                        ]\n                    ],\n                    'fill-opacity': .85\n                },\n\n                //'fill-opacity': .85,\n                // 'id': 'population',\n                // 'type': 'circle',\n                // source: 'state',\n                // 'paint': {\n                //     'circle-radius': {\n                //         'base': 1.75,\n                //         'stops': [[12, 2], [22, 180]]\n                //     },\n                // 'circle-color': '#f00'\n\n                // }\n                //\n            });\n\n            map.addLayer({\n                id: 'county-data',\n                source: 'county',\n                'source-layer': 'countyDAC-68q8mt',  // vector tileset name\n                minzoom: zoomThreshold,\n                type: 'fill',\n                filter: ['==', 'isState', \"no\"],\n                paint: {\n                    'fill-color': [\n                        'case',\n                        ['boolean', ['feature-state', 'hover'], false],\n                        '#ffe37a', // Color to use when the condition is true (clicked)\n                        ['boolean', ['feature-state', 'click'], false],\n                        '#ffe37a', // Color to use when the condition is true (clicked)\n                        [\n                            'interpolate',\n                            ['linear'],\n                            ['get', 'class'],\n                            0,\n                            props.colors.color0,\n                            1,\n                            props.colors.color1,\n                            2,\n                            props.colors.color2,\n                            3,\n                            props.colors.color3,\n                            4,\n                            props.colors.color4,\n                            5,\n                            props.colors.color5,\n                            6,\n                            props.colors.color6,\n                            7,\n                            props.colors.color7\n                        ]\n                    ],\n                    'fill-opacity': .85,\n                },\n            });\n\n            // define boundary lines for states so that\n            // divisions are always obvious regardless of zoom\n            map.addLayer({\n                id: 'state-boundaries',\n                source: 'state',\n                'source-layer': 'stateDAC-1m13bh',\n                type: 'line',\n                paint: {\n                    'line-color': '#000',\n                    'line-width': 0.05\n                }\n            });\n\n            // define boundary lines for counties so that\n            // divisions are always obvious regardless of zoom\n            map.addLayer({\n                id: 'county-boundaries',\n                source: 'county',\n                'source-layer': 'countyDAC-68q8mt',\n                type: 'line',\n                paint: {\n                    'line-color': '#000',\n                    'line-width': 0.1,\n                    'line-opacity': 0.5\n                }\n            });\n        });\n        let stateHoveredPolygonId = null;\n        let stateClickedPolygonId = null;\n        let countyHoveredPolygonId = null;\n        let countyClickedPolygonId = null;\n        // When the map is clicked display a popup\n        map.on('click', 'state-data', (e) => {\n\n            // the span elements used in the sidebar\n            const nameDisplay = document.getElementById('name');\n            const costDisplay = document.getElementById('cost');\n            const elecDisplay = document.getElementById('elec');\n            const elevDisplay = document.getElementById('elev');\n            const popDisplay = document.getElementById('pop');\n            const preDisplay = document.getElementById('pre');\n            const tempDisplay = document.getElementById('temp');\n\n            // the properties of the feature\n            const properties = e.features[0].properties;\n\n            // the current features properties\n            const stateName = properties['NAME'];\n            const stateCost = properties['cost'];\n            const stateElec = properties['electric'];\n            const stateElev = properties['elevation'];\n            const statePop = properties['population'];\n            const statePre = properties['precipitation'];\n            const stateTemp = properties['temperature'];\n\n            //Function to format percent\n            function formatPercent(value) {\n                value = value * 100;\n                return value.toFixed(0) + '%';\n            }\n\n            // Function to add commas as thousands separators\n            function addCommas(value) {\n                return value.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n            }\n\n            function formatTemp(value) {\n                value = value.toFixed(2);\n                return value + \"°F\";\n            }\n\n\n            //display the property values\n            nameDisplay.textContent = stateName;\n            costDisplay.textContent = formatPercent(stateCost);\n            elecDisplay.textContent = addCommas(stateElec);\n            elevDisplay.textContent = addCommas(stateElev);\n            popDisplay.textContent = addCommas(statePop);\n            preDisplay.textContent = addCommas(statePre);\n            tempDisplay.textContent = formatTemp(stateTemp);\n\n            if (stateClickedPolygonId !== null) {\n                // Reset the state of the previously clicked feature\n                map.setFeatureState(\n                    {source: 'state', sourceLayer: 'stateDAC-1m13bh', id: stateClickedPolygonId},\n                    {click: false}\n                );\n            }\n            // Set the state of the clicked feature to 'click'\n            stateClickedPolygonId = e.features[0].id;\n            map.setFeatureState(\n                {source: 'state', sourceLayer: 'stateDAC-1m13bh', id: stateClickedPolygonId},\n                {click: true}\n            );\n\n        });\n\n        map.on('mousemove', 'state-data', (e) => {\n            const properties = e.features[0].properties;\n\n            if (stateHoveredPolygonId !== null) {\n                // Reset the state of the previously clicked feature\n                map.setFeatureState(\n                    {source: 'state', sourceLayer: 'stateDAC-1m13bh', id: stateHoveredPolygonId},\n                    {hover: false}\n                );\n            }\n\n            // Set the state of the clicked feature to 'click'\n            stateHoveredPolygonId = e.features[0].id;\n            map.setFeatureState(\n                {source: 'state', sourceLayer: 'stateDAC-1m13bh', id: stateHoveredPolygonId},\n                {hover: true}\n            );\n\n        });\n\n\n        map.on('mouseleave', 'state-data', () => {\n            if (stateHoveredPolygonId !== null) {\n                map.setFeatureState(\n                    {source: 'state', sourceLayer: 'stateDAC-1m13bh', id: stateHoveredPolygonId},\n                    {hover: false}\n                );\n            }\n            stateHoveredPolygonId = null;\n        });\n\n        map.on('mousemove', 'county-data', (e) => {\n            if (countyHoveredPolygonId !== null) {\n                // Reset the state of the previously clicked feature in the 'county-data' layer\n                map.setFeatureState(\n                    {source: 'county', sourceLayer: 'countyDAC-68q8mt', id: countyHoveredPolygonId},\n                    {hover: false}\n                );\n            }\n\n            // Set the state of the hovered feature in the 'county-data' layer to 'hover'\n            countyHoveredPolygonId = e.features[0].id;\n            map.setFeatureState(\n                {source: 'county', sourceLayer: 'countyDAC-68q8mt', id: countyHoveredPolygonId},\n                {hover: true}\n            );\n        });\n        map.on('mouseleave', 'county-data', () => {\n            if (countyHoveredPolygonId !== null) {\n                map.setFeatureState(\n                    {source: 'county', sourceLayer: 'countyDAC-68q8mt', id: countyHoveredPolygonId},\n                    {hover: false}\n                );\n            }\n            countyHoveredPolygonId = null;\n        });\n        // When the map is clicked display a popup\n        map.on('click', 'county-data', (e) => {\n\n            // the span elements used in the sidebar\n            const nameDisplay = document.getElementById('name');\n            const costDisplay = document.getElementById('cost');\n            const elecDisplay = document.getElementById('elec');\n            const elevDisplay = document.getElementById('elev');\n            const popDisplay = document.getElementById('pop');\n            const preDisplay = document.getElementById('pre');\n            const tempDisplay = document.getElementById('temp');\n\n            // the properties of the feature\n            const properties = e.features[0].properties;\n\n            console.log(e.features)\n\n            // the current features properties\n            const countyName = properties['NAME'];\n            const countyCost = parseFloat(properties['cost']);\n            const countyElec = parseFloat(properties['electric']);\n            const countyElev = parseFloat(properties['elevation']);\n            const countyPop = parseFloat(properties['population']);\n            const countyPre = parseFloat(properties['precipitation']);\n            const countyTemp = parseFloat(properties['temperature']);\n\n\n            //Function to format percent\n            function formatPercent(value) {\n                value = value * 100;\n                return value.toFixed(0) + '%';\n            }\n\n            // Function to add commas as thousands separators\n            function addCommas(value) {\n                return value.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n            }\n\n            function formatTemp(value) {\n                value = value.toFixed(2);\n                return value + \"°F\";\n            }\n\n            nameDisplay.textContent = countyName;\n            costDisplay.textContent = formatPercent(countyCost);\n            elecDisplay.textContent = addCommas(countyElec);\n            elevDisplay.textContent = addCommas(countyElev);\n            popDisplay.textContent = addCommas(countyPop);\n            preDisplay.textContent = countyPre.toFixed(2);\n            tempDisplay.textContent = formatTemp(countyTemp);\n            if (countyClickedPolygonId !== null) {\n                // Reset the state of the previously clicked feature in the 'county-data' layer\n                map.setFeatureState(\n                    {source: 'county', sourceLayer: 'countyDAC-68q8mt', id: countyClickedPolygonId},\n                    {click: false}\n                );\n            }\n\n            // Set the state of the clicked feature in the 'county-data' layer to 'click'\n            countyClickedPolygonId = e.features[0].id;\n\n            map.setFeatureState(\n                {source: 'county', sourceLayer: 'countyDAC-68q8mt', id: countyClickedPolygonId},\n                {click: true}\n            );\n\n\n        });\n\n\n        map.on('mouseenter', 'county-data', () => {\n            map.getCanvas().style.cursor = 'pointer';\n        });\n\n        map.on('mouseleave', 'county-data', () => {\n            map.getCanvas().style.cursor = '';\n        });\n\n    }, []);\n\n    return (\n\n        <div ref={mapContainer} className=\"map-container\">\n\n            <div className='info-section'>\n                <div className='state-name'><span id='name'> Select a State or County </span></div>\n                <hr className='name-line'/>\n                <div><strong>Cost Efficiency:</strong> <span id='cost'></span></div>\n                <div><strong>Electric:</strong> <span id='elec'></span></div>\n                <div><strong>Elevation in Feet:</strong> <span id='elev'></span></div>\n                <div><strong>Population:</strong> <span id='pop'></span></div>\n                <div><strong>Precipitation:</strong> <span id='pre'></span></div>\n                <div><strong>Temperature:</strong> <span id='temp'></span></div>\n                <Link to=\"/moreinfo\">More Info</Link>\n            </div>\n\n\n            {/*\n            <div className=\"map-overlay top\" style={{display: dropdownDisplay}}>\n                <div className=\"map-overlay-inner\">\n                    <fieldset>\n                        <label>Chose Criteria</label>\n                        <select id=\"layer\" name=\"layer\">\n                            <option value=\"population\">Population</option>\n                            <option value=\"landPrices\">Land Prices</option>\n                            <option value=\"precipitation\">Precipitation</option>\n                        </select>\n                    </fieldset>\n                </div>\n            </div>\n           */}\n            <div id=\"legend\" className=\"legend\" style={{display: legendDisplay}}>\n                <h4>Cost Efficency</h4>\n                <h3>Most</h3>\n                <div><span className=\"b723122\" style={{backgroundColor: props.colors.color7}}></span></div>\n                <div><span className=\"b8b4225\" style={{backgroundColor: props.colors.color6}}></span></div>\n                <div><span className=\"ba25626\" style={{backgroundColor: props.colors.color5}}></span></div>\n                <div><span className=\"bb86b25\" style={{backgroundColor: props.colors.color4}}></span></div>\n                <div><span className=\"bca8323\" style={{backgroundColor: props.colors.color3}}></span></div>\n                <div><span className=\"bda9c20\" style={{backgroundColor: props.colors.color2}}></span></div>\n                <div><span className=\"be6b71e\" style={{backgroundColor: props.colors.color1}}></span></div>\n                <h3>Least</h3>\n            </div>\n        </div>\n\n    );\n}\n\nexport default DACMap;",[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/components/KelpMap/KelpMap.js",["157","158"],[],"/Users/ediehaase/Downloads/Capstone Git repo/cse498-anthropocene-institute/frontend/src/pages/KelpFarms/KelpFarms.js",[],[],{"ruleId":"159","severity":1,"message":"160","line":160,"column":12,"nodeType":"161","messageId":"162","endLine":160,"endColumn":68,"fix":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":14},{"ruleId":"164","severity":1,"message":"168","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":43,"column":9,"nodeType":"161","endLine":49,"endColumn":11},{"ruleId":"159","severity":1,"message":"160","line":38,"column":46,"nodeType":"161","messageId":"162","endLine":38,"endColumn":107,"fix":"171"},{"ruleId":"164","severity":1,"message":"172","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":19,"column":12,"nodeType":"175","messageId":"176","endLine":22,"endColumn":92},{"ruleId":"173","severity":1,"message":"174","line":24,"column":12,"nodeType":"175","messageId":"176","endLine":26,"endColumn":98},{"ruleId":"159","severity":1,"message":"160","line":98,"column":5,"nodeType":"161","messageId":"162","endLine":98,"endColumn":42,"fix":"177"},{"ruleId":"164","severity":1,"message":"178","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":22},{"ruleId":"164","severity":1,"message":"179","line":178,"column":11,"nodeType":"166","messageId":"167","endLine":178,"endColumn":33},{"ruleId":"164","severity":1,"message":"180","line":179,"column":11,"nodeType":"166","messageId":"167","endLine":179,"endColumn":33},{"ruleId":"164","severity":1,"message":"181","line":190,"column":15,"nodeType":"166","messageId":"167","endLine":190,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":407,"column":7,"nodeType":"184","endLine":407,"endColumn":25,"suggestions":"185"},{"ruleId":"169","severity":1,"message":"170","line":70,"column":13,"nodeType":"161","endLine":75,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":105,"column":13,"nodeType":"161","endLine":110,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":142,"column":13,"nodeType":"161","endLine":147,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":7,"column":9,"nodeType":"161","messageId":"162","endLine":7,"endColumn":71,"fix":"186"},{"ruleId":"169","severity":1,"message":"170","line":8,"column":11,"nodeType":"161","endLine":13,"endColumn":13},{"ruleId":"159","severity":1,"message":"160","line":17,"column":7,"nodeType":"161","messageId":"162","endLine":17,"endColumn":44,"fix":"187"},{"ruleId":"169","severity":1,"message":"170","line":42,"column":9,"nodeType":"161","endLine":48,"endColumn":11},{"ruleId":"164","severity":1,"message":"188","line":15,"column":12,"nodeType":"166","messageId":"167","endLine":15,"endColumn":27},{"ruleId":"164","severity":1,"message":"189","line":319,"column":19,"nodeType":"166","messageId":"167","endLine":319,"endColumn":29},{"ruleId":"182","severity":1,"message":"183","line":452,"column":8,"nodeType":"184","endLine":452,"endColumn":10,"suggestions":"190"},{"ruleId":"164","severity":1,"message":"191","line":15,"column":11,"nodeType":"166","messageId":"167","endLine":15,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":184,"column":8,"nodeType":"184","endLine":184,"endColumn":10,"suggestions":"192"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"193","text":"194"},"no-unused-vars","'nReact' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"195","text":"194"},"'Heatmap' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",{"range":"196","text":"194"},"'MapboxGeocoder' is defined but never used.","'countyHoveredPolygonId' is assigned a value but never used.","'countyClickedPolygonId' is assigned a value but never used.","'countyName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.colors.color0', 'props.colors.color1', 'props.colors.color2', 'props.colors.color3', 'props.colors.color4', 'props.colors.color5', 'props.colors.color6', and 'props.colors.color7'. Either include them or remove the dependency array.","ArrayExpression",["197"],{"range":"198","text":"194"},{"range":"199","text":"194"},"'dropdownDisplay' is assigned a value but never used.","'properties' is assigned a value but never used.",["200"],"'zoomThreshold' is assigned a value but never used.",["201"],[5213,5213]," rel=\"noreferrer\"",[1788,1788],[3080,3080],{"desc":"202","fix":"203"},[215,215],[458,458],{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},"Update the dependencies array to be: [map, geojsonData, props.colors.color0, props.colors.color1, props.colors.color2, props.colors.color3, props.colors.color4, props.colors.color5, props.colors.color6, props.colors.color7]",{"range":"207","text":"208"},"Update the dependencies array to be: [props.colors.color0, props.colors.color1, props.colors.color2, props.colors.color3, props.colors.color4, props.colors.color5, props.colors.color6, props.colors.color7]",{"range":"209","text":"210"},{"range":"211","text":"210"},[14494,14512],"[map, geojsonData, props.colors.color0, props.colors.color1, props.colors.color2, props.colors.color3, props.colors.color4, props.colors.color5, props.colors.color6, props.colors.color7]",[17373,17375],"[props.colors.color0, props.colors.color1, props.colors.color2, props.colors.color3, props.colors.color4, props.colors.color5, props.colors.color6, props.colors.color7]",[6466,6468]]